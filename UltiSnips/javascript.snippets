snippet l "console.log statement"
console.log($0)
endsnippet

snippet d "debug statement"
debugger
endsnippet

snippet switch
switch ( ${VISUAL}${1:expression} ) {
	case '${VISUAL}${3:case}':
		${4}
		return ${0}
	default:
		${2}
}
endsnippet

snippet rsc "React Stateless Component" b
import * as React from 'react'

function `!p snip.rv = snip.basename if snip.basename != 'index' else ''`$0({$2}) {
    return (
      <$1></$1>
    )
  }
endsnippet

snippet rc "React stateful component" b
import * as React from 'react'

class `!p snip.rv = snip.basename if snip.basename != 'index' else ''`$0 extends React.PureComponent {
    render() {
      const { $2 } = this.props
        return (
        <$1></$1>
        )
    }
}

endsnippet

snippet sm "State machine" b
const stateChart = {
	initial: '$1',
	states: {
		$1: { on: { $2: '$2', $3: '$3' }, onEntry: '$4' },
		$2: { on: { $2: '$2', $3: '$3', $5: '$1' } },
		$3: { on: { $1: '$1' } }
	}
}
endsnippet

snippet cdm "Component Did Mount" b
componentDidMount() {
	$1
}
endsnippet

snippet desc "describe" b
describe('$1' () => {
	it('$2', () => {
		$3
	})
})
endsnippet

snippet it "test description" b
it('$1', () => {
		$2
})
endsnippet

snippet "<([\w\.]+)" "jsx tag" br
<`!p snip.rv = match.group(1)`${1}>
	${VISUAL}${2}
</`!p snip.rv = match.group(1)`${3}
endsnippet
